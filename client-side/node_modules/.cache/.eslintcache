[{"/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/index.js":"1","/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/App.js":"2","/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/reportWebVitals.js":"3","/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/pages/index.js":"4","/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/pages/DataForm.jsx":"5","/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/pages/PredictionPage.jsx":"6"},{"size":548,"mtime":1624995374061,"results":"7","hashOfConfig":"8"},{"size":401,"mtime":1625167949844,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1624916172454,"results":"10","hashOfConfig":"8"},{"size":469,"mtime":1625079531090,"results":"11","hashOfConfig":"8"},{"size":3213,"mtime":1625166408699,"results":"12","hashOfConfig":"8"},{"size":1516,"mtime":1625093102400,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2js44q",{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/index.js",[],["31","32"],"/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/App.js",["33","34","35","36","37","38"],"import './App.scss';\nimport './index.css'\nimport React, { Component } from \"react\";\n//import pages for router\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport './index.css'\n\n//pages\nimport Webpages from './pages';\n\n\n\n\n\nfunction App() {\n    return (\n        <div>\n            <Webpages/>\n        </div>\n  );\n}\n\n\n\nexport default App;\n","/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/reportWebVitals.js",[],"/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/pages/index.js",["39","40"],"import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nimport DataForm from \"./DataForm\";\nimport PredictionPage from \"./PredictionPage\";\n\nconst Webpages = () => {\n    return (\n        <Router>\n            {/*router paths*/}\n            <Route exact path=\"/\" component={DataForm}/>\n            <Route path=\"/predict\" component={PredictionPage}/>\n        </Router>\n    );\n};\n\n\nexport default Webpages;","/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/pages/DataForm.jsx",["41"],"import React, {Component, useEffect} from 'react';\n//import axios from 'axios';\n//import {AiOutlineSearch} from 'react-icons/ai';\n\n//file upload component\n\n\n\nexport default class DataForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          //add global variable here -- not thread safe\n            description: '',\n            age: '',\n            gender: '',\n            size: '',\n            image_url: ''\n        };\n        this.handleInputChanged = this.handleInputChanged.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    //*********************************************************\n    //for file upload and all\n    //do it separately first, then see if I can combine the two\n    /*\n    handleFileChange = event => {\n        this.setState({picture: event.target.files[0]});\n    }\n    handleFileUpload = () => {\n        const fileData = new FormData();\n\n        fileData.append(\n            \"thisFile\",\n            this.state.picture,\n            this.state.picture.name\n        );\n\n        console.log('file uploaded');\n\n        //axios.post('', fileData);\n\n\n\n    }\n*/\n\n//*********************************************************\n\n    handleInputChanged = (e) => {\n        this.setState({[ e.target.name]: e.target.value });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.history.push('/predict') //redirects to predict route\n\n\n/*        axios\n            .post('', search)\n            .then(() => console.log('search made'))\n            .catch(err => {\n                console.log(err);\n            })*/\n\n    };\n\n\n    render() {\n        return (\n            <div className={'page-container'}>\n                <div className={\"form-container\"}>\n                        <h1 className=\"heading\">Input Data</h1>\n                    <div className={\"container\"}>\n                            <form onSubmit={this.handleSubmit}>\n                                {/*make into a text box, make button below*/}\n                                {/*<input className={\"file-upload\"} type={\"file\"} name={\"file\"}/>*/}\n                                <textarea className={\"text-box\"} name={\"description\"} placeholder={\"Search Description\"} onChange={this.handleInputChanged}/>\n                                <input className={\"input-form\"} type={\"text\"} name={\"gender\"} placeholder={\"gender\"} onChange={this.handleInputChanged}/>\n                                <input className={\"input-form\"}  type={\"text\"} name={\"age\"} placeholder={\"age\"} onChange={this.handleInputChanged}/>\n                                <input className={\"input-form\"}  type={\"text\"} name={\"size\"} placeholder={\"size\"} onChange={this.handleInputChanged}/>\n                                <input className={\"input-form\"}  type={\"text\"} name={\"image-url\"} placeholder={\"image url\"} onChange={this.handleInputChanged}/>\n                                <button type=\"submit\" id=\"search-button\" className=\"btn btn-primary\">\n                                    <i>Search</i>\n                                </button>\n                            </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/pages/PredictionPage.jsx",["42"],"import React, { Component, useEffect } from 'react';\n//import axios from 'axios';\n\n\nclass PredictionPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            categories: [\n                {category: \"jeans\", prediction: \"95%\"},\n                {category: \"shirt\", prediction: \"5%\"}\n            ]\n        }\n        }\n\n    renderTableData() {\n        return this.state.categories.map((item, index) => {\n            const {category, prediction} = item\n            return (\n                <tr key={category}>\n                    <td>{category}</td>\n                    <td>{prediction}</td>\n                </tr>\n            )\n        })\n    }\n\n    renderTableHeader() {\n        let header = Object.keys(this.state.categories[0])\n        return header.map((key, index) => {\n            return <th key={index}>{key.toUpperCase()}</th>\n        })\n    }\n\n    render() {\n        return (\n            <div className={\"pred-container\"}>\n                <h1>This is our prediction blah blah blah</h1>\n                <h2 className={\"heading-pred\"}>Confidence Prediction Table</h2>\n                <div className={\"table-container\"}>\n                    <table id={\"categories\"}>\n                        <tbody>\n                        <tr>{this.renderTableHeader()}</tr>\n                        {this.renderTableData()}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default PredictionPage;\n\n\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":3,"column":17,"nodeType":"49","messageId":"50","endLine":3,"endColumn":26},{"ruleId":"47","severity":1,"message":"51","line":6,"column":22,"nodeType":"49","messageId":"50","endLine":6,"endColumn":28},{"ruleId":"47","severity":1,"message":"52","line":7,"column":5,"nodeType":"49","messageId":"50","endLine":7,"endColumn":10},{"ruleId":"47","severity":1,"message":"53","line":8,"column":5,"nodeType":"49","messageId":"50","endLine":8,"endColumn":11},{"ruleId":"47","severity":1,"message":"54","line":9,"column":5,"nodeType":"49","messageId":"50","endLine":9,"endColumn":9},{"ruleId":"47","severity":1,"message":"55","line":10,"column":5,"nodeType":"49","messageId":"50","endLine":10,"endColumn":13},{"ruleId":"47","severity":1,"message":"53","line":4,"column":5,"nodeType":"49","messageId":"50","endLine":4,"endColumn":11},{"ruleId":"47","severity":1,"message":"54","line":6,"column":5,"nodeType":"49","messageId":"50","endLine":6,"endColumn":9},{"ruleId":"47","severity":1,"message":"56","line":1,"column":27,"nodeType":"49","messageId":"50","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"56","line":1,"column":28,"nodeType":"49","messageId":"50","endLine":1,"endColumn":37},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]