{"ast":null,"code":"var _jsxFileName = \"/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/pages/DataForm.jsx\";\nimport React, { Component } from 'react'; //import axios from 'axios';\n//import {AiOutlineSearch} from 'react-icons/ai';\n//file upload component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DataForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFileChange = event => {\n      this.setState({\n        picture: event.target.files[0]\n      });\n    };\n\n    this.handleFileUpload = () => {\n      const fileData = new FormData();\n      fileData.append(\"thisFile\", this.state.picture, this.state.picture.name);\n      console.log('file uploaded'); //axios.post('', fileData);\n    };\n\n    this.handleInputChanged = e => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.history.push('/predict');\n      const description = this.state;\n      const search = {\n        description\n      };\n      /*        axios\n                  .post('', search)\n                  .then(() => console.log('search made'))\n                  .catch(err => {\n                      console.log(err);\n                  })*/\n    };\n\n    this.state = {\n      //add global variable here -- not thread safe\n      picture: null\n    };\n  } //*********************************************************\n  //for file upload and all\n  //do it separately first, then see if I can combine the two\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'page-container',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"Input Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"input\",\n            name: \"description\",\n            placeholder: \"Search Description\",\n            onChange: this.handleInputChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"file-upload\",\n            type: \"file\",\n            name: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"search-button\",\n            className: \"btn btn-primary\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jayanderson/WebstormProjects/GLP-Group-1-21/client-side/src/pages/DataForm.jsx"],"names":["React","Component","DataForm","constructor","props","handleFileChange","event","setState","picture","target","files","handleFileUpload","fileData","FormData","append","state","name","console","log","handleInputChanged","e","description","value","handleSubmit","preventDefault","history","push","search","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AAEA;;;AAKA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC5CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,gBAZmB,GAYAC,KAAK,IAAI;AACxB,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAV,OAAd;AACH,KAdkB;;AAAA,SAenBC,gBAfmB,GAeA,MAAM;AACrB,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,MAAAA,QAAQ,CAACE,MAAT,CACI,UADJ,EAEI,KAAKC,KAAL,CAAWP,OAFf,EAGI,KAAKO,KAAL,CAAWP,OAAX,CAAmBQ,IAHvB;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EATqB,CAWrB;AAIH,KA9BkB;;AAAA,SAmCnBC,kBAnCmB,GAmCGC,CAAD,IAAO;AACxB,WAAKb,QAAL,CAAc;AAACc,QAAAA,WAAW,EAAED,CAAC,CAACX,MAAF,CAASa;AAAvB,OAAd;AACH,KArCkB;;AAAA,SAuCnBC,YAvCmB,GAuCHH,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKpB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AAEA,YAAML,WAAW,GAAG,KAAKN,KAAzB;AAEA,YAAMY,MAAM,GAAG;AACXN,QAAAA;AADW,OAAf;AAIR;AACA;AACA;AACA;AACA;AACA;AAEK,KAxDkB;;AAEf,SAAKN,KAAL,GAAa;AACX;AACEP,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH,GAP2C,CAU5C;AACA;AACA;;;AAgDAoB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE,gBAAhB;AAAA,gCACQ;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAEY;AAAM,UAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA,kCAEI;AAAU,YAAA,IAAI,EAAC,OAAf;AAAuB,YAAA,IAAI,EAAE,aAA7B;AAA4C,YAAA,WAAW,EAAE,oBAAzD;AAA+E,YAAA,QAAQ,EAAE,KAAKJ;AAA9F;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAO,YAAA,SAAS,EAAE,aAAlB;AAAiC,YAAA,IAAI,EAAE,MAAvC;AAA+C,YAAA,IAAI,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,EAAE,EAAC,eAAzB;AAAyC,YAAA,SAAS,EAAC,iBAAnD;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA5E2C","sourcesContent":["import React, { Component } from 'react';\n//import axios from 'axios';\n//import {AiOutlineSearch} from 'react-icons/ai';\n\n//file upload component\n\n\n\n\nexport default class DataForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          //add global variable here -- not thread safe\n            picture: null\n        };\n    }\n\n\n    //*********************************************************\n    //for file upload and all\n    //do it separately first, then see if I can combine the two\n    handleFileChange = event => {\n        this.setState({picture: event.target.files[0]});\n    }\n    handleFileUpload = () => {\n        const fileData = new FormData();\n\n        fileData.append(\n            \"thisFile\",\n            this.state.picture,\n            this.state.picture.name\n        );\n\n        console.log('file uploaded');\n\n        //axios.post('', fileData);\n\n\n\n    }\n\n\n//*********************************************************\n\n    handleInputChanged = (e) => {\n        this.setState({description: e.target.value});\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.history.push('/predict')\n\n        const description = this.state;\n\n        const search = {\n            description\n        };\n\n/*        axios\n            .post('', search)\n            .then(() => console.log('search made'))\n            .catch(err => {\n                console.log(err);\n            })*/\n\n    };\n\n\n    render() {\n        return (\n            <div className={'page-container'}>\n                <div className={\"form-container\"}>\n                        <h1 className=\"heading\">Input Data</h1>\n                            <form onSubmit={this.handleSubmit}>\n                                {/*make into a text box, make button below*/}\n                                <textarea type=\"input\" name={\"description\"} placeholder={\"Search Description\"} onChange={this.handleInputChanged}/>\n                                <input className={\"file-upload\"} type={\"file\"} name={\"file\"}/>\n                                <button type=\"submit\" id=\"search-button\" className=\"btn btn-primary\">\n                                    <i>Search</i>\n                                </button>\n                            </form>\n                </div>\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}